generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  password String
  Resume   Resume[]
}

model Resume {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  basics    Basics      @relation(fields: [basicsId], references: [id])
  skills    Skills      @relation(fields: [skillsId], references: [id])
  work      Work[]
  education Education[]
  awards    Award[]
  volunteer Volunteer[]
  basicsId  String      @db.ObjectId
  skillsId  String      @db.ObjectId
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?     @db.ObjectId
}

model Basics {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  dob       String
  label     String
  image     String
  email     String
  phone     String
  url       String
  summary   String
  country   String
  relExp    String
  totalExp  String
  objective String
  languages Language[]
  profiles  Profile[]
  Resume    Resume[]
}

model Language {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  value    String
  level    Int
  Basics   Basics? @relation(fields: [basicsId], references: [id])
  basicsId String? @db.ObjectId
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  network  String
  value    String
  Basics   Basics? @relation(fields: [basicsId], references: [id])
  basicsId String? @db.ObjectId
}

model Work {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  position      String
  country       String
  url           String
  startDate     String
  isWorkingHere Boolean
  endDate       String?
  summary       String
  years         String
  Resume        Resume? @relation(fields: [resumeId], references: [id])
  resumeId      String? @db.ObjectId
}

model Education {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  institution    String
  studyType      String
  area           String
  startDate      String
  isStudyingHere Boolean
  endDate        String?
  description    String
  Resume         Resume? @relation(fields: [resumeId], references: [id])
  resumeId       String? @db.ObjectId
}

model Award {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  date     String
  awarder  String
  summary  String
  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String? @db.ObjectId
}

model Volunteer {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  organization      String
  position          String
  url               String
  startDate         String
  endDate           String
  summary           String
  isVolunteeringNow Boolean
  Resume            Resume? @relation(fields: [resumeId], references: [id])
  resumeId          String? @db.ObjectId
}

model Skills {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  languages    LanguageSkill[]
  frameworks   Framework[]
  technologies Technology[]
  tools        Tool[]
  Resume       Resume[]
}

model LanguageSkill {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  level    Int
  Skills   Skills? @relation(fields: [skillsId], references: [id])
  skillsId String? @db.ObjectId
}

model Framework {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  level    Int
  Skills   Skills? @relation(fields: [skillsId], references: [id])
  skillsId String? @db.ObjectId
}

model Technology {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  level    Int
  Skills   Skills? @relation(fields: [skillsId], references: [id])
  skillsId String? @db.ObjectId
}

model Tool {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  level    Int
  Skills   Skills? @relation(fields: [skillsId], references: [id])
  skillsId String? @db.ObjectId
}
